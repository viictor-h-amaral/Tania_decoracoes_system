<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonNegative.Static.Background" Color="#FF6F6F"/>
    <SolidColorBrush x:Key="ButtonNegative.Static.Foreground" Color="#670000"/>

    <SolidColorBrush x:Key="ButtonNegative.MouseOver.Background" Color="#FF5959"/>
    <SolidColorBrush x:Key="ButtonNegative.MouseOver.Foreground" Color="#670000"/>

    <SolidColorBrush x:Key="ButtonNegative.Pressed.Background" Color="#BB3232"/>
    <SolidColorBrush x:Key="ButtonNegative.Pressed.Foreground" Color="#670000"/>

    <SolidColorBrush x:Key="ButtonNegative.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="ButtonNegative.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="btnStyleNegative" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNegative.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNegative.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true"
                            CornerRadius="20">
                        
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNegative.MouseOver.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNegative.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNegative.Pressed.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNegative.Pressed.Foreground}"/>
                            <Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNegative.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNegative.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonPositive.Static.Background" Color="#72BD72"/>
    <SolidColorBrush x:Key="ButtonPositive.Static.Foreground" Color="#145B14"/>

    <SolidColorBrush x:Key="ButtonPositive.MouseOver.Background" Color="#4E9A4E"/>
    <SolidColorBrush x:Key="ButtonPositive.MouseOver.Foreground" Color="#145B14"/>

    <SolidColorBrush x:Key="ButtonPositive.Pressed.Background" Color="#145B14"/>
    <SolidColorBrush x:Key="ButtonPositive.Pressed.Foreground" Color="#7FCB7F"/>

    <SolidColorBrush x:Key="ButtonPositive.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="ButtonPositive.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="btnStylePositive" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonPositive.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonPositive.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true"
                            CornerRadius="20">
                        
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPositive.MouseOver.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPositive.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPositive.Pressed.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPositive.Pressed.Foreground}"/>
                            <Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPositive.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPositive.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonNeutral.Static.Background" Color="#C4C4C4"/>
    <SolidColorBrush x:Key="ButtonNeutral.Static.Foreground" Color="#4C4C4C"/>

    <SolidColorBrush x:Key="ButtonNeutral.MouseOver.Background" Color="#A7A7A7"/>
    <SolidColorBrush x:Key="ButtonNeutral.MouseOver.Foreground" Color="#4C4C4C"/>

    <SolidColorBrush x:Key="ButtonNeutral.Pressed.Background" Color="#4C4C4C"/>
    <SolidColorBrush x:Key="ButtonNeutral.Pressed.Foreground" Color="#DDDDDD"/>

    <SolidColorBrush x:Key="ButtonNeutral.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="ButtonNeutral.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="btnStyleNeutral" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNeutral.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNeutral.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        SnapsToDevicePixels="true"
                            CornerRadius="20">

                        <ContentPresenter x:Name="contentPresenter" 
                                      Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}" 
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNeutral.MouseOver.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNeutral.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNeutral.Pressed.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNeutral.Pressed.Foreground}"/>
                            <Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonNeutral.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonNeutral.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>