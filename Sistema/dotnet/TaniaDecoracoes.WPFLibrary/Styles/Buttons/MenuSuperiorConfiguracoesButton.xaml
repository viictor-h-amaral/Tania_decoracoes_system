<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:userControl="clr-namespace:TaniaDecoracoes.WPFLibrary.UserControls"
                    xmlns:utils="clr-namespace:TaniaDecoracoes.WPFLibrary.Utils">
    <utils:EqualityToBoolConverter x:Key="EqualityConverter"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ModuloButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ModuloButton.Static.Foreground" Color="Gold"/>

    <SolidColorBrush x:Key="ModuloButton.MouseOver.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ModuloButton.MouseOver.Foreground" Color="Gold"/>

    <SolidColorBrush x:Key="ModuloButton.Pressed.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ModuloButton.Pressed.Foreground" Color="Gold"/>

    <SolidColorBrush x:Key="ModuloButton.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ModuloButton.Disabled.Foreground" Color="#606060"/>

    <Style x:Key="MenuSuperiorConfiguracoesButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ModuloButton.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ModuloButton.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Quicksand"/>

        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">

                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left">

                            <userControl:FontAwesomeIcon x:Name="Icon" 
                                                         IconCode="{TemplateBinding Tag}" 
                                                         Foreground="{TemplateBinding Foreground}"
                                                         VerticalAlignment="Center"
                                                         Margin="30, 3, 15, 3"
                                                         FontSize="16"/>

                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>

                        
                        
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ModuloButton.Pressed.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ModuloButton.Pressed.Foreground}"/>
                            <Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
                            <Setter Property="TextElement.Foreground" TargetName="Icon" Value="{StaticResource ModuloButton.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ModuloButton.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ModuloButton.Disabled.Foreground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Icon" Value="{StaticResource ModuloButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualityConverter}">
                        <Binding Path="ModuloSelecionado"/>
                        <Binding RelativeSource="{RelativeSource Self}" Path="CommandParameter"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Background" Value="{StaticResource ModuloButton.Pressed.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource ModuloButton.Pressed.Foreground}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                    <Condition>
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualityConverter}">
                                <Binding Path="ModuloSelecionado"/>
                                <Binding RelativeSource="{RelativeSource Self}" Path="CommandParameter"/>
                            </MultiBinding>
                        </Condition.Binding>
                        <Condition.Value>False</Condition.Value>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ModuloButton.MouseOver.Background}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ModuloButton.MouseOver.Foreground}"/>
                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ModuloButton.MouseOver.Foreground}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>